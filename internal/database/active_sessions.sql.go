// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: active_sessions.sql

package database

import (
	"context"
	"time"
)

const createActiveSession = `-- name: CreateActiveSession :exec
INSERT INTO active_sessions (program_name, start_time)
VALUES (?, ?)
`

type CreateActiveSessionParams struct {
	ProgramName string
	StartTime   time.Time
}

func (q *Queries) CreateActiveSession(ctx context.Context, arg CreateActiveSessionParams) error {
	_, err := q.db.ExecContext(ctx, createActiveSession, arg.ProgramName, arg.StartTime)
	return err
}

const getActiveSession = `-- name: GetActiveSession :one
SELECT start_time FROM active_sessions
WHERE program_name = ?
`

func (q *Queries) GetActiveSession(ctx context.Context, programName string) (time.Time, error) {
	row := q.db.QueryRowContext(ctx, getActiveSession, programName)
	var start_time time.Time
	err := row.Scan(&start_time)
	return start_time, err
}

const removeActiveSession = `-- name: RemoveActiveSession :exec
DELETE FROM active_sessions
WHERE program_name = ?
`

func (q *Queries) RemoveActiveSession(ctx context.Context, programName string) error {
	_, err := q.db.ExecContext(ctx, removeActiveSession, programName)
	return err
}
